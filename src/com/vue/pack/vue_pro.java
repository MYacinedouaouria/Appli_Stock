/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vue.pack;

import com.classes.pack.Controle;
import com.vue.view.*;
import com.classes.pack.Produit;
import com.vue.pack.*;
import com.classes.pack.SingletonConnecction;
import com.implementation.pack.Role;
import com.modele_table.pack.BeauteTableau.BeauteQteProduit;
import com.modele_table.pack.BeauteTableau.TableHeader;
import com.modele_table.pack.ModelTable;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;

/**
 *
 * @author tchatseu
 */
public class vue_pro extends javax.swing.JPanel {

    /**
     * Creates new form vue_produit
     */
     Role r=new Role();
	JOptionPane jop=new JOptionPane();
	List<Produit> lp=new ArrayList<Produit>();
	ModelTable model=new ModelTable();
	JPanel processus =new JPanel();
        AutoSuggestor autoSuggestor;
    public vue_pro(JFrame frame)  {
        initComponents();
        processus=this;
       // chargement de tous les produits issus de la base de donnnee
        actualise_table();
        
       
        table_produit.addMouseListener(new remplissage());
        selection_recher.setAutoscrolls(true);
        //chargement des categories et rayon issus de la base de donn√©e
        String[] lc=r.list_categorie_rayon("categorie");
        String[] lr=r.list_categorie_rayon("rayon");
        setlist_categorie(lc);

        table_produit.getTableHeader().setDefaultRenderer(new TableHeader());
        table_produit.getColumnModel().getColumn(5).setCellRenderer(new BeauteQteProduit());
        // init_categorie();
        
         autoSuggestor = new AutoSuggestor(valeur_recher, frame, null, Color.gray, Color.white, Color.red, 0.75f) {
            @Override
            boolean wordTyped(String typedWord) {
            	Role r=new Role();
                //create list for dictionary this in your case might be done via calling a method which queries db and returns results as arraylist
                ArrayList<String> words = new ArrayList<>();
               SingletonConnecction sg=new SingletonConnecction();
               Connection co;
               words=Produit.recherche();
                
                setDictionary(words);
                //addToDictionary("bye");//adds a single word

                return super.wordTyped(typedWord);//now call super to check for any matches against newest dictionary
            }
        };
       
      
        frame.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        jPanel1 = new javax.swing.JPanel();
        imprimer = new javax.swing.JButton();
        l_recherpar = new javax.swing.JLabel();
        valeur_recher = new javax.swing.JTextField();
        rechercher = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        selection_recher = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_produit = new javax.swing.JTable();
        label2 = new java.awt.Label();
        jPanel2 = new javax.swing.JPanel();
        nom_produit = new javax.swing.JTextField();
        l_nompro = new javax.swing.JLabel();
        l_idcathe = new javax.swing.JLabel();
        l_pu = new javax.swing.JLabel();
        prix_uni = new javax.swing.JFormattedTextField();
        categorie = new javax.swing.JComboBox<>();
        l_alert = new javax.swing.JLabel();
        stock_alert = new javax.swing.JFormattedTextField();
        ajouter = new javax.swing.JButton();
        actualiser = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        import_excel = new javax.swing.JButton();

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        label1.setForeground(new java.awt.Color(97, 117, 158));
        label1.setText("GESTION DES PRODUITS");

        imprimer.setBackground(new java.awt.Color(245, 240, 253));
        imprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/modifier2.png"))); // NOI18N
        imprimer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        imprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimerActionPerformed(evt);
            }
        });

        l_recherpar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        l_recherpar.setForeground(java.awt.Color.red);
        l_recherpar.setText("RECHERCHER PAR");

        valeur_recher.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        valeur_recher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valeur_recherActionPerformed(evt);
            }
        });

        rechercher.setBackground(new java.awt.Color(245, 240, 253));
        rechercher.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rechercher.setForeground(new java.awt.Color(255, 0, 0));
        rechercher.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/search.png"))); // NOI18N
        rechercher.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercherActionPerformed(evt);
            }
        });

        supprimer.setBackground(new java.awt.Color(245, 240, 253));
        supprimer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        supprimer.setForeground(new java.awt.Color(255, 0, 0));
        supprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/sup.png"))); // NOI18N
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(245, 240, 253));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/nettoyer.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        selection_recher.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        selection_recher.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "nom produit", "categorie", "code produit" }));
        selection_recher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selection_recherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(l_recherpar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selection_recher, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valeur_recher, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(imprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(imprimer)
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addComponent(l_recherpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(valeur_recher, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(selection_recher, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rechercher, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jScrollPane1.setBackground(new java.awt.Color(191, 194, 204));
        jScrollPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        table_produit.setAutoCreateRowSorter(true);
        table_produit.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        table_produit.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        table_produit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "CODE PRODUIT", "NOM PRODUIT", "N¬∞ CATEGORIE", "N¬∞ RAYON", "PRIX UNITAIRE", "QUANTITE", "STOCK ALERT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_produit.setAutoscrolls(true);
        table_produit.setPreferredSize(new java.awt.Dimension(2000,2000));
        jScrollPane1.setViewportView(table_produit);

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        label2.setForeground(new java.awt.Color(97, 117, 158));
        label2.setText("Formulaire Ajout ");

        nom_produit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        l_nompro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        l_nompro.setText("Nom Produit");

        l_idcathe.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        l_idcathe.setText("Cathegorie");

        l_pu.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        l_pu.setText("Prix unitaire");

        prix_uni.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        prix_uni.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        prix_uni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prix_uniActionPerformed(evt);
            }
        });

        categorie.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        categorie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B" }));
        categorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorieActionPerformed(evt);
            }
        });

        l_alert.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        l_alert.setText("Stock Alert");

        stock_alert.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        stock_alert.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        ajouter.setBackground(new java.awt.Color(245, 240, 253));
        ajouter.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ajouter.setForeground(new java.awt.Color(255, 0, 0));
        ajouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/add.png"))); // NOI18N
        ajouter.setBorder(null);
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });

        actualiser.setBackground(new java.awt.Color(245, 240, 253));
        actualiser.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        actualiser.setForeground(new java.awt.Color(255, 0, 0));
        actualiser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/refresh5.png"))); // NOI18N
        actualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserActionPerformed(evt);
            }
        });

        modifier.setBackground(new java.awt.Color(245, 240, 253));
        modifier.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        modifier.setForeground(new java.awt.Color(255, 0, 0));
        modifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/modifier.png"))); // NOI18N
        modifier.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nom_produit, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(l_nompro)
                        .addGap(184, 184, 184))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l_idcathe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(l_pu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(l_alert, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(prix_uni, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                            .addComponent(categorie, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(stock_alert))))
                .addGap(138, 138, 138))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(actualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_nompro, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nom_produit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(l_idcathe, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categorie, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prix_uni, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_pu, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stock_alert, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_alert, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(actualiser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ajouter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modifier, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(279, 279, 279))
        );

        import_excel.setBackground(new java.awt.Color(67, 104, 104));
        import_excel.setForeground(java.awt.Color.white);
        import_excel.setText("IMPORT DE FICHIER VIA EXCEL");
        import_excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                import_excelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(319, 319, 319))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(import_excel, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(import_excel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void imprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imprimerActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        //int selection=table.getSelectedRow();
       try {

            int selection=table_produit.getSelectedRow();
            Produit p = model.l_e.get(selection);
            int confirmation = jop.showConfirmDialog(null, "voulez vous vraiment supprimer le produit: " + p.getNom_produit(), "confirmation de suppression", JOptionPane.YES_NO_CANCEL_OPTION);
            if (confirmation == 0) {
                if (r.supprimer_produi(p)) {

                    model.l_e.remove(p);
                    jop.showMessageDialog(null, "suppression reussie", "suppression", JOptionPane.INFORMATION_MESSAGE);
                    actualise_panel();
                } else {
                    jop.showMessageDialog(null, "erreur de suppression", "error", JOptionPane.ERROR_MESSAGE);
                }
            }

            //dans le cas ou il choisit plusieurs produit √† supprimer
            /*else{
                int confirmation = jop.showConfirmDialog(null, "voulez vous vraiment supprimer tous ses produits ?", "confirmation de suppression", JOptionPane.YES_NO_CANCEL_OPTION);
                if (confirmation==0) {
                    for (int i=0;i<selection.length; i++) {
                        Produit p=new Produit();
                        p = model.l_e.get(selection[i]);
                        if(r.supprimer_produi(p)){
                            model.l_e.remove(p);
                        }
                    }
                    actualise_panel();
                    jop.showMessageDialog(null, "suppression reussie", "suppression", JOptionPane.INFORMATION_MESSAGE);
                }

            }*/
        }
        catch(IndexOutOfBoundsException i){
            jop.showMessageDialog(null, "aucune selection de produit","selection requise",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_supprimerActionPerformed

    private void valeur_recherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valeur_recherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valeur_recherActionPerformed

    private void rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercherActionPerformed
        // TODO add your handling code here:
         //la recherche peut renvoyer un RuntimeException ie pas de produit trouver
        try{
            //on recupere la valeur issue de la categorie ÔøΩ recherchernom=
            String valeur=valeur_recher.getText();

            //on recherche en fonction de sa categorie selectionnÔøΩe dans la liste
            if(selection_recher.getSelectedItem()=="nom produit"){
                model.l_e=r.rechercher_Produit("nom_produit",valeur);
            }
            else if(selection_recher.getSelectedItem()=="rayon"){
                model.l_e=r.rechercher_Produit("rayon", valeur);
            }
            else if(selection_recher.getSelectedItem()=="categorie"){

                model.l_e=r.rechercher_Produit("categorie", valeur);
            }
            else{
                int code=Integer.parseInt(valeur_recher.getText());
                model.l_e.clear();
                model.l_e.add(r.rechercher_Produit_code(code));
            }
            table_produit.setModel(model);
            actualise_panel();
        }
        catch(RuntimeException r){
            jop.showMessageDialog(null,"pas de produit correspondant ÔøΩ cette recherche","pas de produit trouver",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_rechercherActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void selection_recherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selection_recherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selection_recherActionPerformed

    private void prix_uniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prix_uniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prix_uniActionPerformed

    private void categorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categorieActionPerformed

    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
        // TODO add your handling code here:
         Produit p=new Produit();
        try{

            //recuperation des valeures dans les champs de saisie
            JTextField[] tj={nom_produit};
            JFormattedTextField[] jf={prix_uni,stock_alert};
            if(Controle.verification_textfield(tj)&& Controle.verification_formatedfields(jf)){
            p.setId_categorie((String)categorie.getSelectedItem());
            p.setNom_produit(nom_produit.getText());
            p.setPrix_unitaire(Integer.parseInt(prix_uni.getText()));
            p.setAlert(Integer.parseInt(stock_alert.getText()));
            //p.setQuantite(Integer.parseInt(prix_uni.getText()));
            //on recupere la quantite du produit
            String qte= jop.showInputDialog(null,"entrer la quantite initiale en stock","quantite initiale",JOptionPane.INFORMATION_MESSAGE);
            int qte_stock=Integer.parseInt(qte);
            p.setQuantite(qte_stock);

            //operation ajout dans la bd et dans les tables
            if(!r.produit_existe(p.getNom_produit())){
                if(r.ajouter_produit(p)){
                    lp.add(p);
                    model.l_e=lp;
                    table_produit.setModel(model);
                    jop.showMessageDialog(null, "ajout reussi","good",JOptionPane.INFORMATION_MESSAGE);
                    actualise_panel();
                }

                else{
                    jop.showMessageDialog(null, "code produit deja existant","erreur d'ajout",JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
                jop.showMessageDialog(null, "ce produit existe deja ! verifier son nom","erreur d'ajout",JOptionPane.ERROR_MESSAGE);
            }
          
            }
            else{
                 jop.showMessageDialog(null, "remplir tout vos champs","erreur de remplissage",JOptionPane.ERROR_MESSAGE);
            }
        }
        
          catch(NumberFormatException n){
            jop.showMessageDialog(null, "veuillez remplir tout vos champs","warming",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_ajouterActionPerformed

    private void actualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserActionPerformed
        // TODO add your handling code here:
        //ici on met tous les formulaire ÔøΩ vide
              actualise_table();
              actualise_panel();
        
    }//GEN-LAST:event_actualiserActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
        // TODO add your handling code here:

       Produit p=new Produit();

        try{
            int selection=table_produit.getSelectedRow();
            p=model.l_e.get(selection);

            //p.setQuantite(Integer.parseInt(prix_uni.getText()));
            //operation ajout dans la bd et dans les tables
            int confirmation=jop.showConfirmDialog(null, "voulez vous vraiment modifier le produit de code: " +p.getId_produit(),"confirmation de modification",JOptionPane.YES_NO_CANCEL_OPTION);
            if(confirmation==0)
            
                if((r.produit_existe(nom_produit.getText())&&(p.getNom_produit().equals(nom_produit.getText())))||!r.produit_existe(nom_produit.getText())){

                    //recuperation des valeures dans les champs de saisie
                    
                    p.setId_categorie((String)categorie.getSelectedItem());
                    p.setNom_produit(nom_produit.getText());
                    p.setPrix_unitaire(Integer.parseInt(prix_uni.getText()));
                    p.setAlert(Integer.parseInt(stock_alert.getText()));
                    if(r.modifier_produit(p)){
                        actualise_table();
                        jop.showMessageDialog(null, "modification reussie","good",JOptionPane.INFORMATION_MESSAGE);
                        actualise_panel();
                    }

                }
                else{
                    jop.showMessageDialog(null, "ce nouveau produit existe deja!:","erreur de modification",JOptionPane.ERROR_MESSAGE);
                }
           
        }
        catch(NumberFormatException n){
            jop.showMessageDialog(null, "veuillez remplir tout vos chamos","warming",JOptionPane.WARNING_MESSAGE);
        }
        catch(IndexOutOfBoundsException i){
            jop.showMessageDialog(null, "aucune selection de produit","selection requise",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_modifierActionPerformed

    private void import_excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_import_excelActionPerformed
        // TODO add your handling code here:
        JFileChooser choix = new JFileChooser();

        int retour = choix.showOpenDialog(null);
        if (retour == JFileChooser.APPROVE_OPTION) {
            // un fichier a √©t√© choisi (sortie par OK)
            // nom du fichier  choisi 
            choix.getSelectedFile().getName();
            // chemin absolu du fichier choisi
            choix.getSelectedFile().
                    getAbsolutePath();
            int conf=JOptionPane.showConfirmDialog(null, "voulez vraiment effectuer exportation?","demande de confirmation",JOptionPane.YES_NO_OPTION);
        if (conf == 0) {
            Produit.export_excel(choix.getSelectedFile());
            actualise_table();
            actualise_panel();
        }
        } else {
            JOptionPane.showMessageDialog(null, "aucune selection de fichier excel au format xls");
        }
    }//GEN-LAST:event_import_excelActionPerformed
//la classe interne remplissage
   //la classe interne remplissage
    public class remplissage implements MouseListener{

		@Override
		public void mouseClicked(MouseEvent arg0) {
			// TODO Auto-generated method stub
			int selection=table_produit.getSelectedRow();
			Produit p=model.l_e.get(selection);
			
			nom_produit.setText(p.getNom_produit());
			categorie.setSelectedItem((String)p.getId_categorie().trim());
			prix_uni.setValue(p.getPrix_unitaire());
                        stock_alert.setValue(p.getAlert());
			
		}

		@Override
		public void mouseEntered(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void mouseExited(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void mousePressed(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void mouseReleased(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		
    }
       


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualiser;
    private javax.swing.JButton ajouter;
    private javax.swing.JComboBox<String> categorie;
    private javax.swing.JButton import_excel;
    private javax.swing.JButton imprimer;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_alert;
    private javax.swing.JLabel l_idcathe;
    private javax.swing.JLabel l_nompro;
    private javax.swing.JLabel l_pu;
    private javax.swing.JLabel l_recherpar;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JButton modifier;
    private javax.swing.JTextField nom_produit;
    private javax.swing.JFormattedTextField prix_uni;
    private javax.swing.JButton rechercher;
    private javax.swing.JComboBox<String> selection_recher;
    private javax.swing.JFormattedTextField stock_alert;
    private javax.swing.JButton supprimer;
    private javax.swing.JTable table_produit;
    private javax.swing.JTextField valeur_recher;
    // End of variables declaration//GEN-END:variables

     
       
    //methode pour actualiser le panel
    public void actualise_panel(){
         //ici on met tous les formulaire ÔøΩ vide
        
        nom_produit.setText("");
        stock_alert.setText("");
        prix_uni.setText("");
        valeur_recher.setText("");
        
    	processus.repaint();
	processus.validate();
    }
    //on actualise le tableau en affichant tous les produits
    public void actualise_table(){
    	model.l_e=r.affiche_stock("tous");
		table_produit.setModel(model);
                 table_produit.setSelectionMode(0);
                
    }
    //methode pour remplir le combobox
    public void setlist_categorie(String[] lc){
            ComboBoxModel<String> mc=new DefaultComboBoxModel<>(lc);
            this.categorie.setModel(mc);
    }
    
    
}
