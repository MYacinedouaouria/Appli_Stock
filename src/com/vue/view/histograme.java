/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vue.view;

import com.implementation.pack.Role;
import com.modele_table.pack.model_stat_hist;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author zonne de travaille
 */
public class histograme extends javax.swing.JPanel {

    /**
     * Creates new form histograme
     */
    Role r=new Role();
    model_stat_hist model=new model_stat_hist();
    public histograme() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table_histogramme = new javax.swing.JTable();
        histo = new javax.swing.JButton();

        table_histogramme.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"25000", "50000", "20000", "44000", "30000"}
            },
            new String [] {
                "janvier", "fevrier", "mars", "avril", "mais"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_histogramme);

        histo.setText("histogramme");
        histo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                histoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(histo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(241, 241, 241))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(histo, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void histoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_histoActionPerformed
       String [] mois={"janvier", "fevrier", "mars", "avril", "mais"};
       double [] m={550000,300009, 503000, 790000, 540000};
       
       model.l_e=r.bilan("mois");
        table_histogramme.setModel(model);
       
       ArrayList<String> nom_des_mois=new ArrayList();
       ArrayList<String> a=new ArrayList();
       ArrayList montant= new ArrayList();
       for(int i=0; i<model.l_e.size(); i++){
           a.add(model.l_e.get(i).getDate());
           montant.add(model.l_e.get(i).getMontant());
       }
       for(int i=0; i<a.size();i++){
           switch (a.get(i)){
               case "1":
                   nom_des_mois.add("JANVIER");
                break;
                 case "2":
                   nom_des_mois.add("FEVRIER");
                break;
                 case "3":
                   nom_des_mois.add("MARS");
                break;
                 case "4":
                   nom_des_mois.add("AVRIL");
                break;
                 case "5":
                   nom_des_mois.add("MAI");
                break;
                 case "6":
                   nom_des_mois.add("JUIN");
                break;
                 case "7":
                   nom_des_mois.add("JUILLET");
                break;
                 case "8":
                   nom_des_mois.add("AOUT");
                break;
                 case "9":
                   nom_des_mois.add("SEPTEMBRE");
                break;
                 case "10":
                   nom_des_mois.add("OCTOBRE");
                break;
                 case "11":
                   nom_des_mois.add("NOVEMBRE");
                break;
                 case "12":
                   nom_des_mois.add("DECEMBRE");
                break;
           }
           
       }
       
       
       Dimension dim=new Dimension(700,650);
        
       drawHistogramme(montant, nom_des_mois,"MONTANT", "PERIODE", "STATISTIQUE ANNUELLE", "STATISTIQUE DE VENTE ANNUELLE", dim);
        

    }//GEN-LAST:event_histoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton histo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_histogramme;
    // End of variables declaration//GEN-END:variables

    
    
    
    
    
    
    
    
    
    
    private void drawHistogramme(ArrayList montant, ArrayList mois, String titreVertical, String titreHorizontal, String titrePaneau, String titreHeader, Dimension dimenssion){
        if(montant.size()==mois.size()){
            DefaultCategoryDataset data= new DefaultCategoryDataset();
            for(int i=0; i<montant.size(); i++){
               data.setValue(Double.parseDouble(montant.get(i).toString()), "montant", mois.get(i).toString()); 
            }
            
            JFreeChart chart=ChartFactory.createStackedBarChart(titreHeader,titreHorizontal,titreVertical, data, PlotOrientation.VERTICAL, false, true, false);
            CategoryPlot p=chart.getCategoryPlot();
            
            p.setRangeGridlinePaint(Color.blue);
            ChartFrame frame=new ChartFrame(titrePaneau, chart);
            frame.setResizable(false);
            frame.setVisible(true);
            frame.setSize(dimenssion);
            frame.setLocationRelativeTo(null);
            
        }
    }


}
