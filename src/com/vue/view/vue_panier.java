/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vue.view;

import com.classes.pack.Client;
import com.vue.pack.*;
import com.classes.pack.Commande_cli;
import com.classes.pack.Facture;
import com.classes.pack.Produit;
import com.classes.pack.SingletonConnecction;
import com.ibm.icu.text.RuleBasedNumberFormat;
import com.implementation.pack.Role;
import com.modele_table.pack.BeauteTableau.BeauteQteProduit;
import com.modele_table.pack.BeauteTableau.BeauteTotal;
import com.modele_table.pack.BeauteTableau.TableHeader;
import com.modele_table.pack.panier_commande;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author tchatseu
 */
public class vue_panier extends javax.swing.JDialog {

    /**
     * Creates new form espace_commande
     */
        
        
    
        Role r=new Role();
	List<Commande_cli> lc=new ArrayList<Commande_cli>();
	panier_commande pc=new  panier_commande();

	Commande_cli ci=new Commande_cli();
	JOptionPane jop=new JOptionPane();
	private JDialog processus=new JDialog();
        
        //ma variable pour la somme des commandes. elle doit se calculer au fur et a 
        // a mesure
        private float somme=0;
        //le client reserve a la vente
        Client client=vue_choisir_client.client_regulier;
    public vue_panier(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
       // this.setSize(500,500);
        processus=this;
        table_panier.addMouseListener(new remplissage());
        //simulation du champ de saisie avec la liste deroutlante
        
        nom_produit.getDocument().addDocumentListener(new saisie());
        liste_deroulante.addListSelectionListener(new selection());
       
        jsp.setVisible(false);
       
        //le label cash doit implementer un document listener agin de pouvoir
        // donner en temps reel le reste Ã  payer
        cash.getDocument().addDocumentListener(new reste());
        
        
        //liste_deroulante.setVisible(false);
        
        //prise de la date actuelle et affichage
        date.setText(r.recup_date_du_jour());
        date.setEditable(false);
        
        table_panier.getTableHeader().setDefaultRenderer(new TableHeader());
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titre = new java.awt.Label();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jsp = new javax.swing.JScrollPane();
        liste_deroulante = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ajouter = new javax.swing.JButton();
        actualiser = new javax.swing.JButton();
        nom_produit = new javax.swing.JTextField();
        prix_achat = new javax.swing.JFormattedTextField();
        quantite = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        stock_restant = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        prix_uni = new javax.swing.JLabel();
        l_cat = new javax.swing.JLabel();
        categorie = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_panier = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        l_total = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        l_cash = new javax.swing.JLabel();
        cash = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        reste_ap = new javax.swing.JLabel();
        supprimer = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        valider = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titre.setAlignment(java.awt.Label.CENTER);
        titre.setBackground(new java.awt.Color(240, 240, 240));
        titre.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        titre.setText("ESPACE COMMANDE CLIENT");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Nom Produit");

        jsp.setBackground(new java.awt.Color(204, 204, 255));
        jsp.setForeground(new java.awt.Color(204, 204, 255));

        liste_deroulante.setBackground(new java.awt.Color(219, 227, 224));
        liste_deroulante.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        liste_deroulante.setForeground(new java.awt.Color(64, 19, 232));
        liste_deroulante.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        liste_deroulante.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jsp.setViewportView(liste_deroulante);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Prix vente");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Quantite");

        ajouter.setBackground(new java.awt.Color(245, 240, 253));
        ajouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/add_vente.png"))); // NOI18N
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });

        actualiser.setBackground(new java.awt.Color(245, 240, 253));
        actualiser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        actualiser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/refresh5.png"))); // NOI18N
        actualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserActionPerformed(evt);
            }
        });

        nom_produit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nom_produitActionPerformed(evt);
            }
        });

        prix_achat.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        prix_achat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prix_achatActionPerformed(evt);
            }
        });

        quantite.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(java.awt.Color.red);
        jLabel5.setText("Date");

        date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        date.setText("04/03/2018");
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("prix uni");

        stock_restant.setBackground(new java.awt.Color(51, 51, 51));
        stock_restant.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        stock_restant.setForeground(java.awt.Color.red);
        stock_restant.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stock_restant.setText("?");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("stock restant");

        prix_uni.setBackground(new java.awt.Color(51, 51, 51));
        prix_uni.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        prix_uni.setForeground(java.awt.Color.red);
        prix_uni.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prix_uni.setText("?");

        l_cat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        l_cat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_cat.setText("categorie");

        categorie.setBackground(new java.awt.Color(51, 51, 51));
        categorie.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        categorie.setForeground(java.awt.Color.blue);
        categorie.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        categorie.setText("?");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nom_produit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jsp, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(l_cat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                                    .addComponent(stock_restant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(prix_uni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(categorie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(prix_achat)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantite, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(nom_produit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(actualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jsp))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prix_achat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantite, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stock_restant, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(prix_uni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(l_cat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(categorie))
        );

        jScrollPane2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        table_panier.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        table_panier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "CODE CLIENT", "NOM PRODUIT", "PRIX VENTE", "QUANTITE", "TOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_panier.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(table_panier);

        l_total.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        l_total.setForeground(java.awt.Color.blue);
        l_total.setText("TOTAL");

        total.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        total.setForeground(java.awt.Color.red);
        total.setText("00");
        total.setToolTipText("");
        total.setOpaque(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(l_total, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(total, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addGap(237, 237, 237))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_total, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        l_cash.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        l_cash.setForeground(java.awt.Color.blue);
        l_cash.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_cash.setText("Cash");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(java.awt.Color.blue);
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Reste AP");

        reste_ap.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        reste_ap.setForeground(java.awt.Color.red);
        reste_ap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reste_ap.setText("00");
        reste_ap.setOpaque(true);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(l_cash, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cash, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reste_ap, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reste_ap)
                    .addComponent(cash, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(l_cash, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        supprimer.setBackground(new java.awt.Color(245, 240, 253));
        supprimer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        supprimer.setForeground(new java.awt.Color(255, 0, 0));
        supprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/sup.png"))); // NOI18N
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });

        modifier.setBackground(new java.awt.Color(245, 240, 253));
        modifier.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        modifier.setForeground(new java.awt.Color(255, 0, 0));
        modifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/modifier.png"))); // NOI18N
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });

        valider.setBackground(new java.awt.Color(245, 240, 253));
        valider.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        valider.setForeground(new java.awt.Color(255, 0, 0));
        valider.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/valider_vente.png"))); // NOI18N
        valider.setText("Valider");
        valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(valider, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(titre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valider, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerActionPerformed
        // TODO add your handling code here:
        if(pc.l_e.isEmpty()){
            jop.showMessageDialog(null, "aucune commande soumise!","pas de commande entrer",JOptionPane.WARNING_MESSAGE);

        }
        
        else{
            
            
            int confirmation=jop.showConfirmDialog(null, "voulez vous vraiment valider la commande: " ,"confirmation de suppression",JOptionPane.YES_NO_CANCEL_OPTION);
            if(confirmation==0){
                 //recuperation de la date du jour
            Date curdate=new Date();
            java.sql.Date datesql=new java.sql.Date(curdate.getYear(),curdate.getMonth(), curdate.getDate());
           
                Facture f=new Facture(client.getId_client(),datesql, somme,vue_connection.user.getLogin());
                r.ajouter_listcom(pc.l_e,f);
                this.dispose();
                journal_vente_stat1.jour.doClick();
                //on desactive impression des factures
                try {
                    //System.exit(-1);
                    int confir_imp=jop.showConfirmDialog(null, "imprimer la facture?: " ,"confirmation d'impression",JOptionPane.YES_NO_CANCEL_OPTION);
                    if(confir_imp==0){
                        this.dispose();
                         imprimer();
                         
                    }
                    else{
                        this.dispose();
                    }
                } catch (Exception ex) {
                    Logger.getLogger(vue_panier.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "mauvais");
                }
                

            }
        }
    }//GEN-LAST:event_validerActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
        // TODO add your handling code here:
        int selection=table_panier.getSelectedRow();
      try{
    	ci=pc.l_e.get(selection);
        
         int confirmation=jop.showConfirmDialog(null, "voulez vous vraiment modifier  la commande: " ,"confirmation de suppression",JOptionPane.YES_NO_CANCEL_OPTION);
         if(confirmation==0){
                if(r.produit_existe(nom_produit.getText())&& r.quantite_suffisante(nom_produit.getText(),Integer.parseInt(quantite.getText()))){
          // on retire la somme de l'ancienne commande
                         somme-=ci.getTotal();
                            ci.setNom_produit(nom_produit.getText());
                            ci.setPrix_uni(Float.parseFloat(prix_achat.getText()));
                            ci.setQte_produit(Integer.parseInt(quantite.getText()));
                            ci.setTotal(ci.getPrix_uni()*ci.getQte_produit());
                            // puis on ajoute la nouvelle somme
                             somme+=ci.getTotal();
                             total.setText(""+somme);
        
                            table_panier.setModel(pc);
                            actualise_fenetre();
                    }
        
                else{
                         if(!r.produit_existe(nom_produit.getText()))
                            jop.showMessageDialog(null, "produit inexistant","erreur de modificaton",JOptionPane.WARNING_MESSAGE);
                           else if(!r.quantite_suffisante(nom_produit.getText(),Integer.parseInt(quantite.getText())))
                            jop.showMessageDialog(null, "stock du produit insuffisant","erreur de modification",JOptionPane.WARNING_MESSAGE);
                    }
         }
     }
    catch(IndexOutOfBoundsException i){
    	jop.showMessageDialog(null, "aucune selection","selection requise",JOptionPane.WARNING_MESSAGE);
        }
      
    }//GEN-LAST:event_modifierActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        
    	 try{
    		 int selection=table_panier.getSelectedRow();
    		 ci=pc.l_e.get(selection);
    	  int confirmation=jop.showConfirmDialog(null, "voulez vous vraiment supprimer la commande: " ,"confirmation de suppression",JOptionPane.YES_NO_CANCEL_OPTION);
 		  if(confirmation==0){
                        somme-=pc.l_e.get(selection).getTotal();
                        total.setText(""+somme);
 		   	pc.l_e.remove(ci);
                        
                        vider_champs();
 		   	actualise_fenetre();
 		  }
    	 }
 		  catch(IndexOutOfBoundsException i){
 			 jop.showMessageDialog(null, "aucune selection","selection requise",JOptionPane.WARNING_MESSAGE);
 		    }
         jsp.setVisible(false);
         actualise_panel();
    }//GEN-LAST:event_supprimerActionPerformed

    private void prix_achatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prix_achatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prix_achatActionPerformed

    private void nom_produitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nom_produitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nom_produitActionPerformed

    private void actualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserActionPerformed
        // TODO add your handling code here:
        nom_produit.setText("");
        prix_achat.setText("");
        quantite.setText("");
        pc.l_e.clear();

        table_panier.setModel(pc);
        actualise_fenetre();
        jsp.setVisible(false);
       liste_deroulante.setVisible(false);
    }//GEN-LAST:event_actualiserActionPerformed

    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
        // TODO add your handling code here:

        ci=new Commande_cli();
        //commande preparee
        try{
            //pour le code_client on recupere celui de la variable code_client
            //stocker dans la boite de dialogue precedente

            ci.setId_client(vue_choisir_client.code_client);
            // ci.setId_client(Integer.parseInt(id_client.getText()));
            
            ci.setNom_produit(nom_produit.getText());
            ci.setPrix_uni(Float.parseFloat(prix_achat.getText()));
            ci.setQte_produit(Integer.parseInt(quantite.getText()));
            
            
            ci.setTotal(ci.getPrix_uni()*ci.getQte_produit());
            

           

            //affectation a la liste
            //on verifie que le produit eciste et que la quantite fournnie par user est correcte
            if(r.produit_existe(nom_produit.getText())&& r.quantite_suffisante(nom_produit.getText(),ci.getQte_produit())){
                
                
                 somme+=ci.getTotal();
                total.setText(""+somme);
                lc.add(ci);
                pc.l_e=lc;
                table_panier.setModel(pc);
                
                //on vide les champs de remplissage
                  vider_champs();
                actualise_fenetre();

            }
            if(!r.produit_existe(ci.getNom_produit()))
                jop.showMessageDialog(null, "produit inexistant","erreur de modificaton",JOptionPane.WARNING_MESSAGE);
            else if(!r.quantite_suffisante(ci.getNom_produit(),ci.getQte_produit()))
                jop.showMessageDialog(null, "stock du produit insuffisant","erreur de modification",JOptionPane.WARNING_MESSAGE);
        }
        catch(NumberFormatException n){
            jop.showMessageDialog(null, "veillez remplir tout vos champs","erreur de remplissage",JOptionPane.WARNING_MESSAGE);
        }
        jsp.setVisible(false);
        actualise_panel();
    }//GEN-LAST:event_ajouterActionPerformed

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vue_panier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vue_panier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vue_panier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vue_panier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                vue_panier dialog = new vue_panier(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualiser;
    private javax.swing.JButton ajouter;
    private javax.swing.JTextField cash;
    private javax.swing.JLabel categorie;
    private javax.swing.JTextField date;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jsp;
    private javax.swing.JLabel l_cash;
    private javax.swing.JLabel l_cat;
    private javax.swing.JLabel l_total;
    private javax.swing.JList<String> liste_deroulante;
    private javax.swing.JButton modifier;
    private javax.swing.JTextField nom_produit;
    private javax.swing.JFormattedTextField prix_achat;
    private javax.swing.JLabel prix_uni;
    private javax.swing.JFormattedTextField quantite;
    private javax.swing.JLabel reste_ap;
    private javax.swing.JLabel stock_restant;
    private javax.swing.JButton supprimer;
    private javax.swing.JTable table_panier;
    private java.awt.Label titre;
    private javax.swing.JLabel total;
    private javax.swing.JButton valider;
    // End of variables declaration//GEN-END:variables

    //methode pour actualiser le panel
    public void actualise_fenetre(){
    	pc.fireTableDataChanged();
    }
    public void actualise_panel(){
        processus.repaint();
         processus.revalidate();
    }
    public void vider_champs(){
            nom_produit.setText("");
            prix_achat.setText("");
            quantite.setText("");
            stock_restant.setText("?");
    }
   
     public class remplissage implements MouseListener{

		@Override
		public void mouseClicked(MouseEvent arg0) {
			// TODO Auto-generated method stub
		  try{
			int selection=table_panier.getSelectedRow();
			ci=pc.l_e.get(selection);
		   	nom_produit.setText(ci.getNom_produit());
		   	prix_achat.setValue(ci.getPrix_uni());
		   	quantite.setValue(ci.getQte_produit());
		  }
		  catch(IndexOutOfBoundsException i){
		    }
		}

		@Override
		public void mouseEntered(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void mouseExited(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void mousePressed(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void mouseReleased(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}
    	
    }
     
     
     // il s'agit ici de la section qui gere la simulation entre le champs de texte et la 
     // liste deroulante
     
     public class selection implements ListSelectionListener{

		@Override
		public void valueChanged(ListSelectionEvent e) {
			// TODO Auto-generated method stub
                            try{
				String val=liste_deroulante.getSelectedValue();
				/* ici la fonction trim() a une grande importance!!!
                                merci beaucoup trim. cette fonction enleve tout les null null
                                qui venait avec la String issue de la liste deroulante
                                */
                                String  r=liste_deroulante.getSelectedValue();
					nom_produit.setText(r.trim());
                                        
					jsp.setVisible(false);  
                                         actualise_panel();
                            }
                            catch(NullPointerException n){
                            }
	
		}
		
	}
     
     
     
            
        //le label cash doit implementer un document listener agin de pouvoir
        // donner en temps reel le reste Ã  payer
	public class saisie implements DocumentListener{

		@Override
		public void changedUpdate(DocumentEvent arg0) {
			// TODO Auto-generated method stub
			               
		}

		@Override
		public void insertUpdate(DocumentEvent a) {
			// TODO Auto-generated method stub
                     try{
                         String val=nom_produit.getText();
                        jsp.setVisible(true);
                       actualise_panel();
			List<String> lp=new ArrayList<>();
			lp=Produit.recherche(val);
                        
                        String [] tnom=new String[lp.size()];
                        for (int i=0; i<lp.size(); i++){
                            tnom[i]=lp.get(i);
                        }
			liste_deroulante.setListData(tnom);
			 if(r.produit_existe(val)){
                             Produit p=r.rechercher_Produit_nom(val).get(0);
                             stock_restant.setText(""+r.recup_quantite_stock(val));
                             prix_uni.setText(""+p.getPrix_unitaire());
                             categorie.setText(p.getId_categorie());
                         }
                         else{
                             stock_restant.setText("?");
                             prix_uni.setText("?");
                         }
		}
                 catch(ArrayIndexOutOfBoundsException ar){
                 
                 }
			
                     
		}

		@Override
		public void removeUpdate(DocumentEvent arg0) {
			// TODO Auto-generated method stub
			                 insertUpdate(arg0);
		}

		
		
	}
        // la 
        
        public class reste implements DocumentListener{

		@Override
		public void changedUpdate(DocumentEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void insertUpdate(DocumentEvent a) {
			// TODO Auto-generated method stub
                     
               
                    try{
                        if(cash.getText().isEmpty())
                            reste_ap.setText(""+somme);
                        else{
                         float reste=somme-Float.parseFloat(cash.getText());
                         reste_ap.setText(""+reste);
                        }
                    }catch(NumberFormatException n){}
                     
		}

		@Override
		public void removeUpdate(DocumentEvent arg0) {
			// TODO Auto-generated method stub
			                 insertUpdate(arg0);
		}

		
		
	}
   
         private void imprimer() throws JRException, SQLException{
       
        // Maintenant ajoutons le code pour imprimer le document
        
        // Notre classe Ã©tant prÃªte, on construit les donnÃ©es exemple, comme si elles venait de 
        // La base de donnÃ©es 
        
        List<Produit> listeProduits = new ArrayList<Produit>();
        
        // A la sortie de cette boucle, nous avons la liste de nos produits.
        // Il faut maintenant construire et gÃ©nÃ©rer notre rapport, mais avant, nous allons importer
        // Le rapport que nous avons editer dans le projet Java ...
        
        
        
        // Ensuite on ajoute les paramÃ¨tres du rapport (ici nous avons un seul, le TITRE)
        Map<String, Object> parametres = new HashMap<String, Object>();
        
        JasperReport jasperReport;
        //cas ou le clieny n'est pas regulier 
        //  111 est le code par defauld attribuer Ã  un client de passage
        
         // On compile d'abord notre rapport avec la ligne de code suivante
             jasperReport = JasperCompileManager
                .compileReport(getClass().getResourceAsStream("facture_client_pas.jrxml"));
        if(vue_choisir_client.code_client!=0){
            
             parametres.put("nom_client", client.getNom_client().toUpperCase());
             parametres.put("addresse", client.getAddresse().toUpperCase());
             parametres.put("ville", client.getVille().toUpperCase());
             parametres.put("telephone", client.getTelephone().toUpperCase());
        }
        else{
            parametres.put("nom_client", "CLIENT DE PASSAGE");
             parametres.put("addresse", "xxxxxxxxxxxxxxxxxx");
             parametres.put("ville", "xxxxxxxxxxxxxxxxxx");
             parametres.put("telephone", "xxxxxxxxxxxxxxxxxx");
           
        }
        //on recupere le numero de la derniere facture
        int num_fact=r.last_facture();
        parametres.put("num_facture",num_fact);
        parametres.put("total_final", somme);
        //pour la conversion du nombre en lettre
        RuleBasedNumberFormat rbnf = new RuleBasedNumberFormat(Locale.FRANCE, RuleBasedNumberFormat.SPELLOUT);
        parametres.put("en_lettre", rbnf.format(somme)+" francs");
	
	
        
        
        // Ensuite on prÃ©cise oÃ¹ est-ce que Jaspert ira chercher les donnÃ©es Ã  imprimer
        JRBeanCollectionDataSource datasource = new JRBeanCollectionDataSource(pc.l_e);
        

        // Remplissage du rapport
        JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametres, datasource);



        // CrÃ©er le dossier contenant les documents gÃ©nÃ©rÃ©s ou reutiliser s'il existe dÃ©jÃ .
        File outDir = new File(System.getProperty("user.home") + File.separator + "liste_produits");
        outDir.mkdirs();
        Date d=new Date();
                
        String suffixeListe =d.getDate()+"-"+(d.getMonth()+1)+"-"+(d.getYear()+1900) ;
        JasperExportManager.exportReportToPdfFile(jasperPrint, outDir + File.separator + "commande NÂ° "+num_fact+"du"+suffixeListe+ ".pdf");

        // On notifie sur l'interface que l'impression s'est bien passÃ©e :    
      
        
        
        // Ensuite on va dans l'interface associer cette action au bouton
                
        // On compile et execute le programme ...
        //
          JasperViewer.viewReport(jasperPrint,true);
    }
      //getters 

   
         
}
