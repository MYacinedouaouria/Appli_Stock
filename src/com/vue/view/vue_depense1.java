/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vue.view;

import com.classes.pack.Depense;
import com.vue.pack.*;
import com.classes.pack.Produit;
import com.classes.pack.SingletonConnecction;
import com.implementation.pack.Role;
import com.liste_saisie.pack.AutoSuggestor;
import com.modele_table.pack.BeauteTableau.BeauteQteProduit;
import com.modele_table.pack.BeauteTableau.TableHeader;
import com.modele_table.pack.ModelTable;
import com.modele_table.pack.ModelTable_dep;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;

/**
 *
 * @author tchatseu
 */
public class vue_depense1 extends javax.swing.JPanel {

    /**
     * Creates new form vue_produit
     */
    Role r=new Role();
	JOptionPane jop=new JOptionPane();
        List<Depense> lp=new ArrayList();
	   ModelTable_dep model=new ModelTable_dep();
	JPanel processus =new JPanel();
    public vue_depense1() {
        //autosuggestion
       
        initComponents();
        processus=this;
        actualise_table();
        table_depense.addMouseListener(new remplissage());
        selection_recher.setAutoscrolls(true);
        
        table_depense.getTableHeader().setDefaultRenderer(new TableHeader());
        table_depense.setModel(model);
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        jPanel1 = new javax.swing.JPanel();
        imprimer = new javax.swing.JButton();
        vider = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        valeur_recher = new javax.swing.JTextField();
        rechercher = new javax.swing.JButton();
        selection_recher = new javax.swing.JComboBox<>();
        l_recherpar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_depense = new javax.swing.JTable();
        label2 = new java.awt.Label();
        jPanel2 = new javax.swing.JPanel();
        l_type = new javax.swing.JLabel();
        l_nature = new javax.swing.JLabel();
        l_montant = new javax.swing.JLabel();
        actualiser = new javax.swing.JButton();
        ajouter = new javax.swing.JButton();
        nature = new javax.swing.JTextField();
        type_dep = new javax.swing.JComboBox<>();
        montant = new javax.swing.JFormattedTextField();
        modifier = new javax.swing.JButton();

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        label1.setForeground(new java.awt.Color(97, 117, 158));
        label1.setText("GESTION DES DEPENSES");

        imprimer.setBackground(new java.awt.Color(245, 240, 253));
        imprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/modifier2.png"))); // NOI18N
        imprimer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        imprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimerActionPerformed(evt);
            }
        });

        vider.setBackground(new java.awt.Color(245, 240, 253));
        vider.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/nettoyer.png"))); // NOI18N
        vider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viderActionPerformed(evt);
            }
        });

        supprimer.setBackground(new java.awt.Color(245, 240, 253));
        supprimer.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        supprimer.setForeground(new java.awt.Color(255, 0, 0));
        supprimer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/sup.png"))); // NOI18N
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });

        valeur_recher.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        rechercher.setBackground(new java.awt.Color(245, 240, 253));
        rechercher.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rechercher.setForeground(new java.awt.Color(255, 0, 0));
        rechercher.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/search.png"))); // NOI18N
        rechercher.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercherActionPerformed(evt);
            }
        });

        selection_recher.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        selection_recher.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "type", "nature", "date" }));
        selection_recher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selection_recherActionPerformed(evt);
            }
        });

        l_recherpar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        l_recherpar.setForeground(java.awt.Color.red);
        l_recherpar.setText("RECHERCHER PAR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(l_recherpar)
                .addGap(7, 7, 7)
                .addComponent(selection_recher, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(valeur_recher, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(imprimer)
                .addGap(1, 1, 1)
                .addComponent(vider, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(imprimer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(vider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(l_recherpar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(selection_recher, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valeur_recher, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rechercher, javax.swing.GroupLayout.Alignment.TRAILING)))
        );

        jScrollPane1.setBackground(new java.awt.Color(191, 194, 204));
        jScrollPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        table_depense.setAutoCreateRowSorter(true);
        table_depense.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        table_depense.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        table_depense.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "CODE PRODUIT", "NOM PRODUIT", "N° CATEGORIE", "N° RAYON", "PRIX UNITAIRE", "QUANTITE", "STOCK ALERT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        table_depense.setAutoscrolls(true);
        table_depense.setPreferredSize(new java.awt.Dimension(2000,2000));
        jScrollPane1.setViewportView(table_depense);

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        label2.setForeground(new java.awt.Color(97, 117, 158));
        label2.setText("Formulaire Ajout ");

        l_type.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        l_type.setText("type ");

        l_nature.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        l_nature.setText("Nature");

        l_montant.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        l_montant.setText("Montant");

        actualiser.setBackground(new java.awt.Color(245, 240, 253));
        actualiser.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        actualiser.setForeground(new java.awt.Color(255, 0, 0));
        actualiser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/refresh5.png"))); // NOI18N
        actualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserActionPerformed(evt);
            }
        });

        ajouter.setBackground(new java.awt.Color(245, 240, 253));
        ajouter.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ajouter.setForeground(new java.awt.Color(255, 0, 0));
        ajouter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/add.png"))); // NOI18N
        ajouter.setBorder(null);
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });

        nature.setFont(new java.awt.Font("Tibetan Machine Uni", 0, 18)); // NOI18N

        type_dep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Interne", "Externe" }));
        type_dep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                type_depActionPerformed(evt);
            }
        });

        montant.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));

        modifier.setBackground(new java.awt.Color(245, 240, 253));
        modifier.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        modifier.setForeground(new java.awt.Color(255, 0, 0));
        modifier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/vue/view/image_app/modifier.png"))); // NOI18N
        modifier.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(l_type)
                        .addGap(108, 108, 108)
                        .addComponent(type_dep, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(actualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_nature, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(l_montant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(montant, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(nature))))
                .addGap(3, 3, 3))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_type, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(type_dep, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_nature, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(nature, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_montant, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(montant, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(actualiser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ajouter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(modifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(341, 341, 341))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(319, 319, 319))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(207, 207, 207))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void imprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imprimerActionPerformed

    private void viderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viderActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_viderActionPerformed

    private void actualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserActionPerformed
        // TODO add your handling code here:
        //ici on met tous les formulaire � vide
        
        
        actualise_table();
       actualise_panel();
       
    }//GEN-LAST:event_actualiserActionPerformed

    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
        // TODO add your handling code here:
        Depense c=new Depense();
        try{

            //recuperation des valeures dans les champs de saisie
           
            c.setType_dep((String)type_dep.getSelectedItem());
            c.setNature(nature.getText());
            c.setMontant(Float.parseFloat(montant.getText()));
            c.setLogin_user(vue_connection.user.getLogin());
            //recuperation de la date
            Date curdate=new Date();
            java.sql.Date datesql=new java.sql.Date(curdate.getYear(),curdate.getMonth(), curdate.getDate());
            c.setDate_dep(datesql);
            //operation ajout dans la bd et dans les tables
            if(r.ajouter_dep(c)){
                lp.add(c);
                model.l_e=lp;
                table_depense.setModel(model);
                jop.showMessageDialog(null, "ajout reussi","good",JOptionPane.INFORMATION_MESSAGE);
                actualise_panel();
                actualise_table();
                journal_dep_stat.jour.doClick();
            }

            else{
                jop.showMessageDialog(null, "depense  existante","erreur d'ajout",JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(NumberFormatException n){
            jop.showMessageDialog(null, "veuillez remplir tout vos chamos","warming",JOptionPane.WARNING_MESSAGE);
        }

        }

        private void supprimerActionPenrformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here:
            //int selection=table.getSelectedRow();

    }//GEN-LAST:event_ajouterActionPerformed

    private void type_depActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_type_depActionPerformed
        // TODO add your handling code here:echech
    }//GEN-LAST:event_type_depActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
        // TODO add your handling code here:
        try{
            Depense c=new Depense();
            int selection=table_depense.getSelectedRow();
            c=model.l_e.get(selection);
            //recuperation des valeures dans les champs de saisie

            c.setType_dep((String)type_dep.getSelectedItem());
            c.setNature(nature.getText());
            c.setMontant(Float.parseFloat(montant.getText()));
            
            //operation ajout dans la bd et dans les tables
            int confirmation=jop.showConfirmDialog(null, "voulez vous vraiment modifier cette depense: " +c.getNumero_dep(),"confirmation de modification",JOptionPane.YES_NO_CANCEL_OPTION);
            if(confirmation==0)
            if(r.modifier_dep(c)){
                actualise_table();
                jop.showMessageDialog(null, "modification reussie","good",JOptionPane.INFORMATION_MESSAGE);
                actualise_panel();
                actualise_table();
                journal_dep_stat.jour.doClick();
            }
            else{
                new errorClasse(null, true, "echec de modification","echec");
            }
        }
        catch(NumberFormatException n){
            jop.showMessageDialog(null, "veuillez remplir tout vos chamos","warming",JOptionPane.WARNING_MESSAGE);
        }
        catch(IndexOutOfBoundsException i){
            jop.showMessageDialog(null, "aucune selection de client","selection requise",JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_modifierActionPerformed

    private void rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercherActionPerformed
        // TODO add your handling code here:
        //la recherche peut renvoyer un RuntimeException ie pas de produit trouver

    }//GEN-LAST:event_rechercherActionPerformed

    private void selection_recherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selection_recherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selection_recherActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
         try{
            int selection=table_depense.getSelectedRow();
            Depense c=new Depense();
            c=model.l_e.get(selection);
            int confirmation=jop.showConfirmDialog(null, "voulez vous vraiment supprimer cette depense","confirmation de suppression",JOptionPane.YES_NO_CANCEL_OPTION);
            if(confirmation==0){
                if(r.supprimer_dep(c)){

                    model.l_e.remove(c);
                    jop.showMessageDialog(null,"suppression reussie","suppression",JOptionPane.INFORMATION_MESSAGE);
                    actualise_panel();
                    actualise_table();
                    journal_dep_stat.jour.doClick();
                }
                else{
                    jop.showMessageDialog(null,"erreur de suppression","error",JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        catch(IndexOutOfBoundsException i){
            jop.showMessageDialog(null, "selectionner la depense","selection requise",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_supprimerActionPerformed

    //la classe interne remplissage
    public class remplissage implements MouseListener{

		@Override
		public void mouseClicked(MouseEvent arg0) {
			// TODO Auto-generated method stub
			int selection=table_depense.getSelectedRow();
			Depense c=model.l_e.get(selection);
			nature.setText(c.getNature());
			montant.setText(""+c.getMontant());
			type_dep.setSelectedItem((String)c.getType_dep().trim());
		}

		@Override
		public void mouseEntered(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void mouseExited(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void mousePressed(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void mouseReleased(MouseEvent arg0) {
			// TODO Auto-generated method stub
			
		}

		
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton actualiser;
    private javax.swing.JButton ajouter;
    private javax.swing.JButton imprimer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_montant;
    private javax.swing.JLabel l_nature;
    private javax.swing.JLabel l_recherpar;
    private javax.swing.JLabel l_type;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JButton modifier;
    private javax.swing.JFormattedTextField montant;
    private javax.swing.JTextField nature;
    private javax.swing.JButton rechercher;
    private javax.swing.JComboBox<String> selection_recher;
    private javax.swing.JButton supprimer;
    private javax.swing.JTable table_depense;
    private javax.swing.JComboBox<String> type_dep;
    private javax.swing.JTextField valeur_recher;
    private javax.swing.JButton vider;
    // End of variables declaration//GEN-END:variables

    
    //methode pour actualiser le panel
    public void actualise_panel(){
        nature.setText("");
        montant.setText("");
        
    	processus.repaint();
        processus.validate();
    }
    //on actualise le tableau en affichant tous les produits
    public void actualise_table(){
                model.l_e=r.affiche_dep();
		table_depense.setModel(model);
                //il sagit d'une methode pour selectionner une seule ligne a la fois
                
    }
    public ArrayList<String> recherche() {
		// TODO Auto-generated method stub
		//List<Produit> lp=new ArrayList<>();
		ArrayList<String> tab=new ArrayList<>();
		SingletonConnecction sg=new SingletonConnecction();
		Connection co=sg.getConnexion();
		int i=0;
		try {
			PreparedStatement ps;
			
				 ps=co.prepareStatement("select * from produit");
				 //ps.setString(1, val+"%");
				ResultSet rs=ps.executeQuery();
				while(rs.next()){
				
				tab.add(rs.getString("nom_pro"));
				i++;
				
			}
			ps.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			//if(tab.size()==0)throw new RuntimeException("pas de produit trouver");
		return tab;
	}
}
